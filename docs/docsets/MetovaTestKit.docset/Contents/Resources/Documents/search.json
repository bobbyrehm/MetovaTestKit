{"Structs/ExpectedAlertAction.html#/s:13MetovaTestKit19ExpectedAlertActionVACSS5title_SC07UIAlertF5StyleO5styletcfc":{"name":"init(title:style:)","abstract":"<p>Initialize an instance of <code>ExpectedAlertAction</code>.</p>","parent_name":"ExpectedAlertAction"},"Structs/ExpectedAlertAction.html":{"name":"ExpectedAlertAction","abstract":"<p>A type used to represent an expected title and style for a <code>UIAlertAction</code> instance.</p>"},"Protocols/MTKTestable.html#/s:13MetovaTestKit11MTKTestableP4testyy12TestableItemQzcFZ":{"name":"test(_:)","abstract":"<p>Asks the <code>MTKTestable</code> type to run the given test block on an instance of the <code>MTKTestable</code> type.</p>","parent_name":"MTKTestable"},"Protocols/MTKTestable.html#/s:13MetovaTestKit11MTKTestableP18instanceForTestingxyFZ":{"name":"instanceForTesting()","abstract":"<p>Asks the <code>MTKTestable</code> type for a new instance in order to be used for testing. This method should provide a new instance every time.</p>","parent_name":"MTKTestable"},"Protocols/MTKTestable.html":{"name":"MTKTestable","abstract":"<p>The MTKTestable protocol provides an alternative, functional approach to <code>XCTest</code>&lsquo;s built in <code>setUp</code> &amp; <code>tearDown</code> methods for handling unit tests.</p>"},"Functions.html#/s:13MetovaTestKit22MTKAssertBarButtonItemySo05UIBarfG0C_10ObjectiveC8SelectorV5sendsSo8NSObjectC2toSSSgyXKs12StaticStringV4fileSu4linetF":{"name":"MTKAssertBarButtonItem(_:sends:to:_:file:line:)","abstract":"<p>Passes if the bar button item has the specified target/action and the target responds to the action. Fails otherwise.</p>"},"Functions.html#/s:13MetovaTestKit28MTKAssertNoBrokenConstraintsSuSSSgyXK7message_s12StaticStringV4fileSu4lineyyc9testBlocktF":{"name":"MTKAssertNoBrokenConstraints(message:file:line:testBlock:)","abstract":"<p>Synchronously tests the provided block for broken constraints. If any constraints are broken, the test fails. Otherwise, it passes.</p>"},"Functions.html#/s:13MetovaTestKit25MTKAssertAlertIsPresentedySo16UIViewControllerC2by_SC07UIAlertI5StyleO5styleSSSg5titleAI7messageSayAA08ExpectedE6ActionVG7actionsAIs12StaticStringV4fileSu4linetF":{"name":"MTKAssertAlertIsPresented(by:style:title:message:actions:_:file:line:)","abstract":"<p>Test that a view controller presented an alert with the specified title, message, action titles, and action styles.</p>"},"Functions.html#/s:13MetovaTestKit20MTKAssertNoExceptionSo11NSExceptionCSgSSSgyXK7message_s12StaticStringV4fileSu4lineyyc9testBlocktF":{"name":"MTKAssertNoException(message:file:line:testBlock:)","abstract":"<p>Synchronously tests the provided block for exceptions. If it would throw an exception, the exception is caught and the test fails. Otherwise, the test passes.</p>"},"Functions.html#/s:13MetovaTestKit18MTKAssertExceptionSo11NSExceptionCSgSSSgyXK7message_s12StaticStringV4fileSu4lineyyc9testBlocktF":{"name":"MTKAssertException(message:file:line:testBlock:)","abstract":"<p>Synchronously tests the provided block for exceptions. If it does not throw an exception, the test fails. If it would throw an exception, the exception is caught and the test passes. Any code below the thrown exception is not executed.</p>"},"Functions.html#/s:13MetovaTestKit16MTKAssertControlySo9UIControlC_10ObjectiveC8SelectorV5sendsSo8NSObjectC2toSC0F6EventsV3forSSSgyXKs12StaticStringV4fileSu4linetF":{"name":"MTKAssertControl(_:sends:to:for:_:file:line:)","abstract":"<p>Test that a control has an action method added for a particular target and event. Passes if the control has the specified target/action/event added. Fails otherwise.</p>"},"Functions.html#/s:13MetovaTestKit25MTKAssertSegmentedControlySo011UISegmentedF0C_SaySSG16hasSegmentTitlesSSSgyXKs12StaticStringV4fileSu4linetF":{"name":"MTKAssertSegmentedControl(_:hasSegmentTitles:_:file:line:)","abstract":"<p>Test that a segmented control has the expected segment titles in the expectd order. Passes if the segmented control has the specified segment titles in the specified order. Fails otherwise.</p>"},"Extensions/XCTestCase.html#/c:@CM@MetovaTestKit@@objc(cs)XCTestCase(im)MTKWaitThenContinueTestAfter:":{"name":"MTKWaitThenContinueTest(after:)","abstract":"<p>Provides a succinct syntax for performing simple asynchronous tests.</p>","parent_name":"XCTestCase"},"Extensions/UIAlertActionStyle.html#/s:s23CustomStringConvertibleP11descriptionSSv":{"name":"description","parent_name":"UIAlertActionStyle"},"Extensions/UIAlertControllerStyle.html#/s:s23CustomStringConvertibleP11descriptionSSv":{"name":"description","parent_name":"UIAlertControllerStyle"},"Extensions/UIAlertControllerStyle.html":{"name":"UIAlertControllerStyle"},"Extensions/UIAlertActionStyle.html":{"name":"UIAlertActionStyle"},"Extensions/XCTestCase.html":{"name":"XCTestCase"},"Extensions.html":{"name":"Extensions","abstract":"<p>The following extensions are available globally.</p>"},"Functions.html":{"name":"Functions","abstract":"<p>The following functions are available globally.</p>"},"Protocols.html":{"name":"Protocols","abstract":"<p>The following protocols are available globally.</p>"},"Structs.html":{"name":"Structs","abstract":"<p>The following structs are available globally.</p>"}}